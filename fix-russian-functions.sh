#!/bin/bash

# Script to convert Russian function names and variables to English in Prices-Stocks files
# Keeps Russian comments and descriptions

echo "üîÑ Converting Russian function names to English..."

FILES=(
  "/Users/r2d2/Documents/Code_Projects/spacechemical-nextjs/bmad-ozon-seller-api/daytona-ozon-api-docs/categories/22-prices-stocks-prices.md"
  "/Users/r2d2/Documents/Code_Projects/spacechemical-nextjs/bmad-ozon-seller-api/daytona-ozon-api-docs/categories/22-prices-stocks-stocks.md"
  "/Users/r2d2/Documents/Code_Projects/spacechemical-nextjs/bmad-ozon-seller-api/daytona-ozon-api-docs/categories/22-prices-stocks-timers.md"
  "/Users/r2d2/Documents/Code_Projects/spacechemical-nextjs/bmad-ozon-seller-api/daytona-ozon-api-docs/categories/22-prices-stocks-discounted.md"
)

# Function name mappings
declare -A FUNCTION_MAP=(
  # Prices functions
  ["–æ–±–Ω–æ–≤–∏—Ç—å–¶–µ–Ω—ã–¢–æ–≤–∞—Ä–æ–≤"]="updateProductPrices"
  ["–º–∞—Å—Å–æ–≤–æ–µ–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ–¶–µ–Ω"]="bulkPriceUpdate"
  ["—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å–ü—Ä–µ–º–∏—É–º–¶–µ–Ω—ã"]="setPremiumPrices"
  ["–ø–æ–ª—É—á–∏—Ç—å–¶–µ–Ω—ã–¢–æ–≤–∞—Ä–æ–≤"]="getProductPrices"
  ["–ø–æ–ª—É—á–∏—Ç—å–í—Å–µ–¶–µ–Ω—ã"]="getAllPrices"
  ["–∞–Ω–∞–ª–∏–∑–¶–µ–Ω–æ–≤–æ–π–ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏"]="analyzePriceCompetitiveness"
  ["—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å–°–∫–∏–¥–∫—É–ù–∞–£—Ü–µ–Ω—ë–Ω–Ω—ã–π–¢–æ–≤–∞—Ä"]="setDiscountedProductDiscount"
  ["–º–∞—Å—Å–æ–≤–æ–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å–°–∫–∏–¥–∫–∏–ù–∞–£—Ü–µ–Ω—ë–Ω–Ω—ã–µ"]="bulkSetDiscountedDiscounts"
  ["—É—Å—Ç–æ–π—á–∏–≤—ã–µ–û–ø–µ—Ä–∞—Ü–∏–∏–°–¶–µ–Ω–∞–º–∏"]="robustPriceOperations"
  
  # Stocks functions
  ["–æ–±–Ω–æ–≤–∏—Ç—å–û—Å—Ç–∞—Ç–∫–∏–¢–æ–≤–∞—Ä–æ–≤"]="updateProductStocks"
  ["–º–∞—Å—Å–æ–≤–æ–µ–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–û—Å—Ç–∞—Ç–∫–æ–≤"]="bulkStockReplenishment"
  ["–æ–±–Ω–æ–≤–∏—Ç—å–û—Å—Ç–∞—Ç–∫–∏–ù–∞–°–∫–ª–∞–¥–∞—Ö"]="updateStocksAcrossWarehouses"
  ["–ø–æ–ª—É—á–∏—Ç—å–û—Å—Ç–∞—Ç–∫–∏–¢–æ–≤–∞—Ä–æ–≤"]="getProductStocks"
  ["–∞–Ω–∞–ª–∏–∑–û—Å—Ç–∞—Ç–∫–æ–≤–ü–æ–°–∫–ª–∞–¥–∞–º"]="analyzeStocksByWarehouses"
  ["–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö–û—Å—Ç–∞—Ç–∫–æ–≤"]="monitorCriticalStocks"
  ["–ø–æ–ª—É—á–∏—Ç—å–î–µ—Ç–∞–ª—å–Ω—É—é–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é–ü–æ–°–∫–ª–∞–¥–∞–º"]="getDetailedWarehouseInfo"
  ["–∞—É–¥–∏—Ç–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è–ü–æ–°–∫–ª–∞–¥–∞–º"]="auditWarehouseDistribution"
  
  # Timers functions
  ["–ø—Ä–æ–≤–µ—Ä–∏—Ç—å–°—Ç–∞—Ç—É—Å–¢–∞–π–º–µ—Ä–æ–≤"]="checkTimerStatus"
  ["–∞–Ω–∞–ª–∏–∑–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏–¢–∞–π–º–µ—Ä–æ–≤"]="analyzeTimerEffectiveness"
  ["–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö–¢–∞–π–º–µ—Ä–æ–≤"]="monitorCriticalTimers"
  ["–æ–±–Ω–æ–≤–∏—Ç—å–¢–∞–π–º–µ—Ä—ã–¢–æ–≤–∞—Ä–æ–≤"]="updateProductTimers"
  ["–∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–ò—Å—Ç–µ–∫–∞—é—â–∏—Ö–¢–∞–π–º–µ—Ä–æ–≤"]="autoUpdateExpiringTimers"
  ["–º–∞—Å—Å–æ–≤–æ–µ–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ–¢–∞–π–º–µ—Ä–æ–≤"]="bulkUpdateTimers"
  ["—É—Å—Ç–æ–π—á–∏–≤—ã–µ–û–ø–µ—Ä–∞—Ü–∏–∏–°–¢–∞–π–º–µ—Ä–∞–º–∏"]="robustTimerOperations"
  
  # Discounted functions
  ["–ø–æ–ª—É—á–∏—Ç—å–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é–û–±–£—Ü–µ–Ω—ë–Ω–Ω—ã—Ö–¢–æ–≤–∞—Ä–∞—Ö"]="getDiscountedProductsInfo"
  ["–∞–Ω–∞–ª–∏–∑–£—Ü–µ–Ω—ë–Ω–Ω—ã—Ö–¢–æ–≤–∞—Ä–æ–≤"]="analyzeDiscountedProducts"
  ["–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è–ü—Ä–æ–¥–∞–∂–£—Ü–µ–Ω—ë–Ω–Ω—ã—Ö–¢–æ–≤–∞—Ä–æ–≤"]="optimizeDiscountedSales"
  ["—É—Å—Ç–æ–π—á–∏–≤—ã–µ–û–ø–µ—Ä–∞—Ü–∏–∏–°–£—Ü–µ–Ω—ë–Ω–Ω—ã–º–∏–¢–æ–≤–∞—Ä–∞–º–∏"]="robustDiscountedOperations"
)

# Variable name mappings
declare -A VARIABLE_MAP=(
  # Common variables
  ["—Ä–µ–∑—É–ª—å—Ç–∞—Ç"]="result"
  ["—Ç–æ–≤–∞—Ä"]="product"
  ["—Ç–æ–≤–∞—Ä—ã"]="products"
  ["—Ü–µ–Ω–∞"]="price"
  ["—Ü–µ–Ω—ã"]="prices"
  ["–æ—Å—Ç–∞—Ç–æ–∫"]="stock"
  ["–æ—Å—Ç–∞—Ç–∫–∏"]="stocks"
  ["—Å–∫–ª–∞–¥"]="warehouse"
  ["—Å–∫–ª–∞–¥—ã"]="warehouses"
  ["—Ç–∞–π–º–µ—Ä"]="timer"
  ["—Ç–∞–π–º–µ—Ä—ã"]="timers"
  ["—Å—Ç–∞—Ç—É—Å"]="status"
  ["–æ—à–∏–±–∫–∞"]="error"
  ["–æ—à–∏–±–∫–∏"]="errors"
  ["–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ"]="quantity"
  ["—Å—É–º–º–∞"]="amount"
  ["–ø–µ—Ä–∏–æ–¥"]="period"
  
  # Specific variables
  ["–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–¶–µ–Ω"]="pricesUpdate"
  ["–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–û—Å—Ç–∞—Ç–∫–æ–≤"]="stocksUpdate"
  ["—Ç–µ–∫—É—â–∏–µ–¶–µ–Ω—ã"]="currentPrices"
  ["—Ç–µ–∫—É—â–∏–µ–û—Å—Ç–∞—Ç–∫–∏"]="currentStocks"
  ["—Å—Ç–∞—Ç—É—Å–¢–∞–π–º–µ—Ä–æ–≤"]="timerStatus"
  ["–∏–Ω—Ñ–æ–ü–æ–°–∫–ª–∞–¥–∞–º"]="warehouseInfo"
  ["–ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ–¢–æ–≤–∞—Ä–æ–≤"]="productArrivals"
  ["—Å–∫–ª–∞–¥Id"]="warehouseId"
  ["—É—Å–ø–µ—à–Ω–æ–û–±–Ω–æ–≤–ª–µ–Ω–æ"]="successCount"
  ["–æ—à–∏–±–æ–∫"]="errorCount"
  ["–≤—Å–µ–≥–æ–û–ø–µ—Ä–∞—Ü–∏–π"]="totalOperations"
  ["—É—Å–ø–µ—à–Ω—ã—Ö–û–ø–µ—Ä–∞—Ü–∏–π"]="successfulOperations"
  ["–æ—Å—Ç–∞—Ç–∫–∏–¢–æ–≤–∞—Ä–∞"]="productStocks"
  ["—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–û—Å—Ç–∞—Ç–∫–æ–≤"]="stockDistribution"
  ["—Ä–µ–∑—É–ª—å—Ç–∞—Ç–¢–æ–≤–∞—Ä–∞"]="productResult"
  ["–∏—Å—Ö–æ–¥–Ω—ã–π"]="original"
  ["–æ–±—â–µ–µ–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ"]="totalArrival"
)

# Process each file
for file in "${FILES[@]}"; do
  if [[ -f "$file" ]]; then
    echo "üìù Processing $(basename "$file")..."
    
    # Create backup
    cp "$file" "${file}.backup"
    
    # Replace function names
    for russian in "${!FUNCTION_MAP[@]}"; do
      english="${FUNCTION_MAP[$russian]}"
      sed -i '' "s/async function ${russian}/async function ${english}/g" "$file"
      echo "   ‚úÖ ${russian} ‚Üí ${english}"
    done
    
    # Replace variable names
    for russian in "${!VARIABLE_MAP[@]}"; do
      english="${VARIABLE_MAP[$russian]}"
      # Replace in const/let/var declarations
      sed -i '' "s/const ${russian} =/const ${english} =/g" "$file"
      sed -i '' "s/let ${russian} =/let ${english} =/g" "$file"
      # Replace in usage (be careful with word boundaries)
      sed -i '' "s/\\.${russian}\\./.${english}./g" "$file"
      sed -i '' "s/\\.${russian}\\?/.${english}?/g" "$file"
      sed -i '' "s/${russian}\\.result/${english}.result/g" "$file"
      sed -i '' "s/${russian}\\.forEach/${english}.forEach/g" "$file"
      sed -i '' "s/\\$\{${russian}/\${${english}/g" "$file"
      echo "   üîÑ ${russian} ‚Üí ${english}"
    done
    
    echo "   ‚úÖ Completed $(basename "$file")"
  else
    echo "   ‚ùå File not found: $file"
  fi
done

echo "üéâ Function name conversion completed!"
echo "üíæ Backup files created with .backup extension"