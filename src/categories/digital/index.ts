/**
 * Digital API implementation
 * Digital product management
 */

import { HttpClient } from "../../core/http.js";
import type { RequestOptions } from "../../core/types.js";
import type { DigitalUploadPostingCodesRequest, DigitalListPostingCodesRequest, DigitalStocksImportRequest } from "../../types/requests/digital.js";
import type { DigitalUploadPostingCodesResponse, DigitalListPostingCodesResponse, DigitalStocksImportResponse } from "../../types/responses/digital.js";

/**
 * Digital API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ü–∏—Ñ—Ä–æ–≤—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏
 * Digital API for digital products management
 *
 * üíæ –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –ø—Ä–æ–¥–∞–≤—Ü–∞–º, —Ä–∞–±–æ—Ç–∞—é—â–∏–º —Å —Ü–∏—Ñ—Ä–æ–≤—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏
 * üíæ Available only for sellers working with digital products
 *
 * @example
 * ```typescript
 * // –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Å —Ü–∏—Ñ—Ä–æ–≤—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏
 * const digitalPostings = await digitalApi.getDigitalPostingsList({
 *   filter: {
 *     since: '2024-01-01',
 *     to: '2024-01-31'
 *   },
 *   limit: 100,
 *   with: {
 *     financial_data: true,
 *     analytics_data: true
 *   }
 * });
 *
 * // –ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–¥—ã –¥–ª—è —Ü–∏—Ñ—Ä–æ–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
 * await digitalApi.uploadDigitalCodes({
 *   posting_number: '12345-0001-1',
 *   exemplars_by_sku: [{
 *     sku: 123456789,
 *     exemplar_qty: 3,
 *     not_available_exemplar_qty: 0,
 *     exemplar_keys: ['CODE001', 'CODE002', 'CODE003']
 *   }]
 * });
 *
 * // –û–±–Ω–æ–≤–∏—Ç—å –æ—Å—Ç–∞—Ç–∫–∏ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
 * await digitalApi.updateDigitalStocks({
 *   stocks: [{
 *     offer_id: 'DIGITAL_PRODUCT_001',
 *     stock: 100
 *   }]
 * });
 * ```
 */
export class DigitalApi {
  constructor(private readonly httpClient: HttpClient) {}

  /**
   * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Å —Ü–∏—Ñ—Ä–æ–≤—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏
   * Get list of postings with digital products
   *
   * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –Ω—É–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–¥—ã —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤.
   * –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –ø—Ä–æ–¥–∞–≤—Ü–∞–º, —Ä–∞–±–æ—Ç–∞—é—â–∏–º —Å —Ü–∏—Ñ—Ä–æ–≤—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏.
   *
   * @param request - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞ —Å–ø–∏—Å–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π
   * @param options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞
   * @returns –°–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Å —Ü–∏—Ñ—Ä–æ–≤—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏
   *
   * @example
   * ```typescript
   * // –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é –Ω–µ–¥–µ–ª—é
   * const weekAgo = new Date();
   * weekAgo.setDate(weekAgo.getDate() - 7);
   *
   * const digitalPostings = await digitalApi.getDigitalPostingsList({
   *   filter: {
   *     since: weekAgo.toISOString().split('T')[0],
   *     to: new Date().toISOString().split('T')[0]
   *   },
   *   limit: 100,
   *   dir: 'DESC',
   *   with: {
   *     financial_data: true,
   *     analytics_data: true,
   *     legal_info: false
   *   }
   * });
   *
   * digitalPostings.result?.forEach(posting => {
   *   console.log(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: ${posting.posting_number} (${posting.status})`);
   *   console.log(`–ó–∞–∫–∞–∑: ${posting.order_number}, ID: ${posting.order_id}`);
   *   console.log(`–°–æ–∑–¥–∞–Ω: ${posting.created_at}`);
   *   console.log(`–î–µ–¥–ª–∞–π–Ω –∫–æ–¥–æ–≤: ${posting.waiting_deadline_for_digital_code}`);
   *
   *   posting.products?.forEach(product => {
   *     console.log(`  –¢–æ–≤–∞—Ä: ${product.name} (SKU: ${product.sku})`);
   *     console.log(`  –¢—Ä–µ–±—É–µ—Ç—Å—è –∫–æ–¥–æ–≤: ${product.required_qty_for_digital_code}`);
   *     console.log(`  –¶–µ–Ω–∞: ${product.price} ${product.currency_code}`);
   *   });
   *
   *   if (posting.analytics_data) {
   *     console.log(`  –†–µ–≥–∏–æ–Ω: ${posting.analytics_data.region}, –≥–æ—Ä–æ–¥: ${posting.analytics_data.city}`);
   *   }
   *
   *   if (posting.financial_data) {
   *     console.log(`  –°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: ${posting.financial_data.order_amount}`);
   *     console.log(`  –ö–æ–º–∏—Å—Å–∏—è: ${posting.financial_data.commission}`);
   *   }
   * });
   *
   * // –ù–∞–π—Ç–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è, —Ç—Ä–µ–±—É—é—â–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–¥–æ–≤
   * const pendingCodeUploads = digitalPostings.result?.filter(posting =>
   *   posting.status === 'awaiting_packaging' &&
   *   posting.products?.some(product => product.required_qty_for_digital_code > 0)
   * ) || [];
   *
   * console.log(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–π –æ–∂–∏–¥–∞—é—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–¥–æ–≤: ${pendingCodeUploads.length}`);
   * ```
   */
  async getDigitalPostingsList(request: DigitalListPostingCodesRequest = {}, options?: RequestOptions): Promise<DigitalListPostingCodesResponse> {
    return this.httpClient.request<DigitalListPostingCodesRequest, DigitalListPostingCodesResponse>("POST", "/v1/posting/digital/list", request, options);
  }

  /**
   * –ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–¥—ã —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è
   * Upload digital product codes for posting
   *
   * –ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–¥—ã —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤ —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞.
   * –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –ø—Ä–æ–¥–∞–≤—Ü–∞–º, —Ä–∞–±–æ—Ç–∞—é—â–∏–º —Å —Ü–∏—Ñ—Ä–æ–≤—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏.
   *
   * @param request - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–¥–æ–≤
   * @param options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞
   * @returns –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–¥–æ–≤ –ø–æ —Ç–æ–≤–∞—Ä–∞–º
   *
   * @example
   * ```typescript
   * // –ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–¥—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏
   * const uploadResult = await digitalApi.uploadDigitalCodes({
   *   posting_number: '12345-0001-1',
   *   exemplars_by_sku: [
   *     {
   *       sku: 123456789,
   *       exemplar_qty: 3,
   *       not_available_exemplar_qty: 0,
   *       exemplar_keys: [
   *         'GAME_KEY_001_ABC123',
   *         'GAME_KEY_002_DEF456',
   *         'GAME_KEY_003_GHI789'
   *       ]
   *     },
   *     {
   *       sku: 987654321,
   *       exemplar_qty: 1,
   *       not_available_exemplar_qty: 1, // –û–¥–∏–Ω –∫–æ–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
   *       exemplar_keys: ['SOFTWARE_LIC_XYZ999']
   *     }
   *   ]
   * });
   *
   * // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–≥—Ä—É–∑–∫–∏
   * uploadResult.exemplars_by_sku?.forEach(result => {
   *   console.log(`SKU ${result.sku}:`);
   *   console.log(`  –ü—Ä–∏–Ω—è—Ç–æ –∫–æ–¥–æ–≤: ${result.received_qty}`);
   *   console.log(`  –û—Ç–∫–ª–æ–Ω–µ–Ω–æ –∫–æ–¥–æ–≤: ${result.rejected_qty}`);
   *
   *   if (result.failed_exemplars && result.failed_exemplars.length > 0) {
   *     console.log('  –û—à–∏–±–∫–∏:');
   *     result.failed_exemplars.forEach(error => {
   *       console.log(`    ${error.code}: ${error.message}`);
   *     });
   *   }
   * });
   *
   * // –ü—Ä–∏–º–µ—Ä –æ–±—Ä–∞–±–æ—Ç–∫–∏ —á–∞—Å—Ç–∏—á–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–¥–æ–≤
   * const uploadWithPartialFailure = await digitalApi.uploadDigitalCodes({
   *   posting_number: '12345-0002-1',
   *   exemplars_by_sku: [{
   *     sku: 555666777,
   *     exemplar_qty: 2,        // –ü–µ—Ä–µ–¥–∞—ë–º 2 –∫–æ–¥–∞
   *     not_available_exemplar_qty: 1, // 1 –∫–æ–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
   *     exemplar_keys: ['CODE_A', 'CODE_B'] // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 3
   *   }]
   * });
   * ```
   */
  async uploadDigitalCodes(request: DigitalUploadPostingCodesRequest, options?: RequestOptions): Promise<DigitalUploadPostingCodesResponse> {
    return this.httpClient.request<DigitalUploadPostingCodesRequest, DigitalUploadPostingCodesResponse>("POST", "/v1/posting/digital/codes/upload", request, options);
  }

  /**
   * –û–±–Ω–æ–≤–∏—Ç—å –æ—Å—Ç–∞—Ç–∫–∏ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
   * Update digital products stock
   *
   * –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤ –Ω–∞–ª–∏—á–∏–∏.
   * –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –ø—Ä–æ–¥–∞–≤—Ü–∞–º, —Ä–∞–±–æ—Ç–∞—é—â–∏–º —Å —Ü–∏—Ñ—Ä–æ–≤—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏.
   *
   * @param request - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤
   * @param options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞
   * @returns –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤ –ø–æ —Ç–æ–≤–∞—Ä–∞–º
   *
   * @example
   * ```typescript
   * // –û–±–Ω–æ–≤–∏—Ç—å –æ—Å—Ç–∞—Ç–∫–∏ –¥–ª—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
   * const stockUpdateResult = await digitalApi.updateDigitalStocks({
   *   stocks: [
   *     {
   *       offer_id: 'GAME_DIGITAL_001',
   *       stock: 50 // –û—Å—Ç–∞–ª–æ—Å—å 50 –ª–∏—Ü–µ–Ω–∑–∏–π –∏–≥—Ä—ã
   *     },
   *     {
   *       offer_id: 'SOFTWARE_LICENSE_002',
   *       stock: 25 // –û—Å—Ç–∞–ª–æ—Å—å 25 –ª–∏—Ü–µ–Ω–∑–∏–π –ü–û
   *     },
   *     {
   *       offer_id: 'DIGITAL_BOOK_003',
   *       stock: 0 // –¶–∏—Ñ—Ä–æ–≤–∞—è –∫–Ω–∏–≥–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å
   *     },
   *     {
   *       offer_id: 'MUSIC_ALBUM_004',
   *       stock: 999 // –ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π –∞–ª—å–±–æ–º (–Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ)
   *     }
   *   ]
   * });
   *
   * // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
   * let successCount = 0;
   * let errorCount = 0;
   *
   * stockUpdateResult.status?.forEach(status => {
   *   if (status.updated) {
   *     successCount++;
   *     console.log(`‚úÖ ${status.offer_id} (SKU: ${status.sku}) - –æ—Å—Ç–∞—Ç–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã`);
   *   } else {
   *     errorCount++;
   *     console.log(`‚ùå ${status.offer_id} - –æ—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:`);
   *     status.errors?.forEach(error => {
   *       console.log(`   ${error.code}: ${error.message}`);
   *     });
   *   }
   * });
   *
   * console.log(`–û–±–Ω–æ–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ: ${successCount}, —Å –æ—à–∏–±–∫–∞–º–∏: ${errorCount}`);
   *
   * // –ü—Ä–∏–º–µ—Ä —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–∞–∫–µ—Ç–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–æ–≤
   * const updateStocksBatch = async (stockUpdates: { offerId: string; newStock: number }[]) => {
   *   const batchSize = 100; // –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π —Ä–∞–∑–º–µ—Ä –±–∞—Ç—á–∞
   *
   *   for (let i = 0; i < stockUpdates.length; i += batchSize) {
   *     const batch = stockUpdates.slice(i, i + batchSize);
   *
   *     const result = await digitalApi.updateDigitalStocks({
   *       stocks: batch.map(item => ({
   *         offer_id: item.offerId,
   *         stock: item.newStock
   *       }))
   *     });
   *
   *     console.log(`–û–±—Ä–∞–±–æ—Ç–∞–Ω –±–∞—Ç—á ${Math.floor(i / batchSize) + 1}/${Math.ceil(stockUpdates.length / batchSize)}`);
   *
   *     // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –±–∞—Ç—á–∞–º–∏ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è rate limiting
   *     if (i + batchSize < stockUpdates.length) {
   *       await new Promise(resolve => setTimeout(resolve, 1000));
   *     }
   *   }
   * };
   * ```
   */
  async updateDigitalStocks(request: DigitalStocksImportRequest, options?: RequestOptions): Promise<DigitalStocksImportResponse> {
    return this.httpClient.request<DigitalStocksImportRequest, DigitalStocksImportResponse>("POST", "/v1/product/digital/stocks/import", request, options);
  }
}
