/**
 * PolygonAPI implementation
 * Polygon binding for delivery zones
 */

import { HttpClient } from '../../core/http.js';
import type { RequestOptions } from '../../core/types.js';
import type { EmptyResponse } from '../../types/common/base.js';
import type { 
  PolygonCreateRequest,
  PolygonBindRequest
} from '../../types/requests/polygon.js';
import type { 
  PolygonCreateResponse
} from '../../types/responses/polygon.js';

/**
 * PolygonAPI –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–∏–≥–æ–Ω–∞–º–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
 * PolygonAPI for delivery polygon management
 * 
 * üó∫Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ https://geojson.io –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ø–æ–ª–∏–≥–æ–Ω–æ–≤
 * üó∫Ô∏è Use https://geojson.io to create polygon coordinates
 * 
 * @example
 * ```typescript
 * // –°–æ–∑–¥–∞—Ç—å –ø–æ–ª–∏–≥–æ–Ω –¥–æ—Å—Ç–∞–≤–∫–∏ –¥–ª—è –ú–æ—Å–∫–≤—ã
 * const polygonResult = await polygonApi.createDeliveryPolygon({
 *   coordinates: "[[[55.7558, 37.6176], [55.7558, 37.7176], [55.8558, 37.7176], [55.8558, 37.6176], [55.7558, 37.6176]]]"
 * });
 * 
 * // –ü—Ä–∏–≤—è–∑–∞—Ç—å –ø–æ–ª–∏–≥–æ–Ω –∫ –º–µ—Ç–æ–¥—É –¥–æ—Å—Ç–∞–≤–∫–∏
 * await polygonApi.bindPolygonToDeliveryMethod({
 *   delivery_method_id: 123,
 *   polygons: [{
 *     polygon_id: polygonResult.polygon_id!,
 *     time: 120 // 2 —á–∞—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
 *   }],
 *   warehouse_location: {
 *     lat: "55.7558",
 *     lon: "37.6176"
 *   }
 * });
 * ```
 */
export class PolygonApi {
  constructor(private readonly httpClient: HttpClient) {}

  /**
   * –°–æ–∑–¥–∞—Ç—å –ø–æ–ª–∏–≥–æ–Ω –¥–æ—Å—Ç–∞–≤–∫–∏
   * Create delivery polygon
   * 
   * –°–æ–∑–¥–∞–π—Ç–µ –ø–æ–ª–∏–≥–æ–Ω –¥–ª—è –∑–æ–Ω—ã –¥–æ—Å—Ç–∞–≤–∫–∏, —É–∫–∞–∑–∞–≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ GeoJSON.
   * –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ https://geojson.io - –æ—Ç–º–µ—Ç—å—Ç–µ –Ω–∞ –∫–∞—Ä—Ç–µ
   * –º–∏–Ω–∏–º—É–º 3 —Ç–æ—á–∫–∏ –∏ —Å–æ–µ–¥–∏–Ω–∏—Ç–µ –∏—Ö –ª–∏–Ω–∏—è–º–∏.
   * 
   * @param request - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª–∏–≥–æ–Ω–∞
   * @param options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞
   * @returns –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª–∏–≥–æ–Ω–∞
   * 
   * @example
   * ```typescript
   * // –°–æ–∑–¥–∞—Ç—å –ø–æ–ª–∏–≥–æ–Ω –¥–ª—è —Ü–µ–Ω—Ç—Ä–∞ –ú–æ—Å–∫–≤—ã
   * const moscowCenterPolygon = await polygonApi.createDeliveryPolygon({
   *   coordinates: `[[[
   *     [55.7558, 37.6176], // –ö—Ä–∞—Å–Ω–∞—è –ø–ª–æ—â–∞–¥—å
   *     [55.7558, 37.7176], // –í–æ—Å—Ç–æ—á–Ω–∞—è –≥—Ä–∞–Ω–∏—Ü–∞
   *     [55.8558, 37.7176], // –°–µ–≤–µ—Ä–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π —É–≥–æ–ª
   *     [55.8558, 37.6176], // –°–µ–≤–µ—Ä–Ω–∞—è –≥—Ä–∞–Ω–∏—Ü–∞
   *     [55.7558, 37.6176]  // –ó–∞–º—ã–∫–∞–Ω–∏–µ –ø–æ–ª–∏–≥–æ–Ω–∞
   *   ]]]`
   * });
   * 
   * console.log(`–°–æ–∑–¥–∞–Ω –ø–æ–ª–∏–≥–æ–Ω —Å ID: ${moscowCenterPolygon.polygon_id}`);
   * 
   * // –°–æ–∑–¥–∞—Ç—å –ø–æ–ª–∏–≥–æ–Ω –¥–ª—è –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–∞
   * const spbPolygon = await polygonApi.createDeliveryPolygon({
   *   coordinates: `[[[
   *     [59.9311, 30.3609], // –î–≤–æ—Ä—Ü–æ–≤–∞—è –ø–ª–æ—â–∞–¥—å
   *     [59.9311, 30.4609], // –í–æ—Å—Ç–æ—á–Ω–∞—è –≥—Ä–∞–Ω–∏—Ü–∞
   *     [60.0311, 30.4609], // –°–µ–≤–µ—Ä–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π —É–≥–æ–ª
   *     [60.0311, 30.3609], // –°–µ–≤–µ—Ä–Ω–∞—è –≥—Ä–∞–Ω–∏—Ü–∞
   *     [59.9311, 30.3609]  // –ó–∞–º—ã–∫–∞–Ω–∏–µ –ø–æ–ª–∏–≥–æ–Ω–∞
   *   ]]]`
   * });
   * 
   * // –°–æ–∑–¥–∞—Ç—å —Å–ª–æ–∂–Ω—ã–π –ø–æ–ª–∏–≥–æ–Ω —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –∑–æ–Ω–∞–º–∏
   * const complexPolygon = await polygonApi.createDeliveryPolygon({
   *   coordinates: `[[[
   *     [55.7000, 37.5000],
   *     [55.7000, 37.8000],
   *     [55.9000, 37.8000],
   *     [55.9000, 37.5000],
   *     [55.7000, 37.5000]
   *   ]], [[
   *     [55.7200, 37.5200], // –ò—Å–∫–ª—é—á–∞–µ–º–∞—è –∑–æ–Ω–∞ (–æ—Ç–≤–µ—Ä—Å—Ç–∏–µ –≤ –ø–æ–ª–∏–≥–æ–Ω–µ)
   *     [55.7200, 37.5800],
   *     [55.7800, 37.5800],
   *     [55.7800, 37.5200],
   *     [55.7200, 37.5200]
   *   ]]]`
   * });
   * 
   * // –§—É–Ω–∫—Ü–∏—è-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–≥–æ –ø–æ–ª–∏–≥–æ–Ω–∞
   * const createRectangularPolygon = async (
   *   minLat: number, minLon: number,
   *   maxLat: number, maxLon: number
   * ) => {
   *   const coordinates = `[[[
   *     [${minLat}, ${minLon}],
   *     [${minLat}, ${maxLon}],
   *     [${maxLat}, ${maxLon}],
   *     [${maxLat}, ${minLon}],
   *     [${minLat}, ${minLon}]
   *   ]]]`;
   *   
   *   return await polygonApi.createDeliveryPolygon({ coordinates });
   * };
   * 
   * const rectPolygon = await createRectangularPolygon(55.7, 37.6, 55.8, 37.7);
   * ```
   */
  async createDeliveryPolygon(
    request: PolygonCreateRequest,
    options?: RequestOptions
  ): Promise<PolygonCreateResponse> {
    return this.httpClient.request<PolygonCreateRequest, PolygonCreateResponse>(
      'POST',
      '/v1/polygon/create',
      request,
      options
    );
  }

  /**
   * –ü—Ä–∏–≤—è–∑–∞—Ç—å –ø–æ–ª–∏–≥–æ–Ω –∫ –º–µ—Ç–æ–¥—É –¥–æ—Å—Ç–∞–≤–∫–∏
   * Bind polygon to delivery method
   * 
   * –°–≤—è–∂–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –ø–æ–ª–∏–≥–æ–Ω—ã —Å –º–µ—Ç–æ–¥–æ–º –¥–æ—Å—Ç–∞–≤–∫–∏, —É–∫–∞–∑–∞–≤ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏
   * –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª–∏–≥–æ–Ω–∞ –∏ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å–∫–ª–∞–¥–∞.
   * 
   * @param request - –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–∏–≤—è–∑–∫–∏ –ø–æ–ª–∏–≥–æ–Ω–æ–≤
   * @param options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–∞
   * @returns –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏–≤—è–∑–∫–∏ –ø–æ–ª–∏–≥–æ–Ω–æ–≤
   * 
   * @example
   * ```typescript
   * // –ü—Ä–∏–≤—è–∑–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ª–∏–≥–æ–Ω–æ–≤ –∫ –º–µ—Ç–æ–¥—É —ç–∫—Å–ø—Ä–µ—Å—Å-–¥–æ—Å—Ç–∞–≤–∫–∏
   * await polygonApi.bindPolygonToDeliveryMethod({
   *   delivery_method_id: 123, // ID –º–µ—Ç–æ–¥–∞ —ç–∫—Å–ø—Ä–µ—Å—Å-–¥–æ—Å—Ç–∞–≤–∫–∏
   *   warehouse_location: {
   *     lat: "55.7558", // –®–∏—Ä–æ—Ç–∞ —Å–∫–ª–∞–¥–∞ –≤ –ú–æ—Å–∫–≤–µ
   *     lon: "37.6176"  // –î–æ–ª–≥–æ—Ç–∞ —Å–∫–ª–∞–¥–∞ –≤ –ú–æ—Å–∫–≤–µ
   *   },
   *   polygons: [
   *     {
   *       polygon_id: 1001, // –¶–µ–Ω—Ç—Ä –ú–æ—Å–∫–≤—ã
   *       time: 60         // 1 —á–∞—Å –¥–æ—Å—Ç–∞–≤–∫–∏
   *     },
   *     {
   *       polygon_id: 1002, // –ë–ª–∏–∂–Ω–∏–µ —Ä–∞–π–æ–Ω—ã
   *       time: 120        // 2 —á–∞—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
   *     },
   *     {
   *       polygon_id: 1003, // –î–∞–ª—å–Ω–∏–µ —Ä–∞–π–æ–Ω—ã
   *       time: 240        // 4 —á–∞—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
   *     }
   *   ]
   * });
   * 
   * // –ü—Ä–∏–≤—è–∑–∞—Ç—å –ø–æ–ª–∏–≥–æ–Ω –∫ –º–µ—Ç–æ–¥—É –æ–±—ã—á–Ω–æ–π –¥–æ—Å—Ç–∞–≤–∫–∏
   * await polygonApi.bindPolygonToDeliveryMethod({
   *   delivery_method_id: 456, // ID –º–µ—Ç–æ–¥–∞ –æ–±—ã—á–Ω–æ–π –¥–æ—Å—Ç–∞–≤–∫–∏
   *   warehouse_location: {
   *     lat: "59.9311", // –®–∏—Ä–æ—Ç–∞ —Å–∫–ª–∞–¥–∞ –≤ –°–ü–±
   *     lon: "30.3609"  // –î–æ–ª–≥–æ—Ç–∞ —Å–∫–ª–∞–¥–∞ –≤ –°–ü–±
   *   },
   *   polygons: [{
   *     polygon_id: 2001, // –í–µ—Å—å –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥
   *     time: 1440       // 24 —á–∞—Å–∞ (1 –¥–µ–Ω—å)
   *   }]
   * });
   * 
   * // –ü—Ä–∏–º–µ—Ä —Å–æ–∑–¥–∞–Ω–∏—è –∏ –ø—Ä–∏–≤—è–∑–∫–∏ –ø–æ–ª–∏–≥–æ–Ω–∞ –≤ –æ–¥–Ω–æ–º workflow
   * const setupDeliveryZone = async (
   *   coordinates: string,
   *   deliveryMethodId: number,
   *   deliveryTimeMinutes: number,
   *   warehouseLat: string,
   *   warehouseLon: string
   * ) => {
   *   // 1. –°–æ–∑–¥–∞—ë–º –ø–æ–ª–∏–≥–æ–Ω
   *   const polygonResult = await polygonApi.createDeliveryPolygon({
   *     coordinates
   *   });
   *   
   *   if (!polygonResult.polygon_id) {
   *     throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª–∏–≥–æ–Ω');
   *   }
   *   
   *   // 2. –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –ø–æ–ª–∏–≥–æ–Ω –∫ –º–µ—Ç–æ–¥—É –¥–æ—Å—Ç–∞–≤–∫–∏
   *   await polygonApi.bindPolygonToDeliveryMethod({
   *     delivery_method_id: deliveryMethodId,
   *     warehouse_location: {
   *       lat: warehouseLat,
   *       lon: warehouseLon
   *     },
   *     polygons: [{
   *       polygon_id: polygonResult.polygon_id,
   *       time: deliveryTimeMinutes
   *     }]
   *   });
   *   
   *   return polygonResult.polygon_id;
   * };
   * 
   * // –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —ç–∫—Å–ø—Ä–µ—Å—Å-–¥–æ—Å—Ç–∞–≤–∫—É –¥–ª—è –ú–ö–ê–î
   * const mkadPolygonId = await setupDeliveryZone(
   *   `[[[55.5742, 37.1427], [55.5742, 37.8427], [55.9742, 37.8427], [55.9742, 37.1427], [55.5742, 37.1427]]]`,
   *   789, // ID —ç–∫—Å–ø—Ä–µ—Å—Å-–¥–æ—Å—Ç–∞–≤–∫–∏
   *   180, // 3 —á–∞—Å–∞
   *   "55.7558", // –®–∏—Ä–æ—Ç–∞ —Å–∫–ª–∞–¥–∞
   *   "37.6176"  // –î–æ–ª–≥–æ—Ç–∞ —Å–∫–ª–∞–¥–∞
   * );
   * 
   * console.log(`–ù–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∑–æ–Ω–∞ —ç–∫—Å–ø—Ä–µ—Å—Å-–¥–æ—Å—Ç–∞–≤–∫–∏, –ø–æ–ª–∏–≥–æ–Ω ID: ${mkadPolygonId}`);
   * ```
   */
  async bindPolygonToDeliveryMethod(
    request: PolygonBindRequest,
    options?: RequestOptions
  ): Promise<void> {
    await this.httpClient.request<PolygonBindRequest, EmptyResponse>(
      'POST',
      '/v1/polygon/bind',
      request,
      options
    );
  }
}